@model List<HoldingDetails.Models.HoldingExt>
@{
    ViewBag.Title = "Holding";
}

<script src="~/Scripts/jquery.tablesorter.min.js"></script>
<script src="~/Scripts/jquery.tablesorter.widgets.min.js"></script>
<script src="https://cdn.plaid.com/link/v2/stable/link-initialize.js"></script>
<link href="~/Content/theme.blue.css" rel="stylesheet" />
@*<div class="col-md-12" style="text-align:right; height:30px;">
        @Html.ActionLink("Add Connection", "AddConnection", null, new { @class = "btn btn-default" })
    </div>*@
@{
    if (TempData.ContainsKey("error"))
    {
        <div>@TempData["error"].ToString() </div>
    }
}

<div style="float:right"><span onclick="DoReg()" class="btn btn-default">Create New Connection </span></div>
<br />
<br />

<table id="holdingTable" class="tablesorter">
    <thead>
        <tr>
            <th>Connection Id</th>
            <th>Instance Id</th>
            <th>Instance Name</th>
            <th>Account Id</th>
            <th>Cost Basis</th>
            <th>Institution Price</th>
            <th>Institution Price As Of</th>
            <th>Institution Value</th>
            <th>Iso Currency Code</th>
            <th>Quantity</th>
            <th>Unofficial Currency Code</th>
        </tr>
    </thead>
    <tbody>
        @if (Model?.Count > 0)
        {
            foreach (var d in Model)
            {
                <tr>
                    <td>@d.ConnectionId</td>
                    <td>@d.InstanceId</td>
                    <td>@d.InstanceName</td>
                    <td>@d.AccountId</td>
                    <td>@d.CostBasis</td>
                    <td>@d.InstitutionPrice</td>
                    <td>@d.InstitutionPriceAsOf</td>
                    <td>@d.InstitutionValue </td>
                    <td>@d.IsoCurrencyCode</td>
                    <td>@d.Quantity</td>
                    <td>@d.UnofficialCurrencyCode</td>
                </tr>
            }
        }
    </tbody>
</table>





<script type="text/javascript">
    $(function () {
        debugger;
        $("#holdingTable").tablesorter({
            theme: 'blue'
        });
    });

    function DoReg() {
            debugger;

                const configs = {
                    // Pass the link_token generated in step 2.
                    token: '@ViewBag.LinkToken',
                    onLoad: function () {
                        // The Link module finished loading.
                    },
                    onSuccess: function (public_token, metadata) {
                        debugger;
                        // The onSuccess function is called when the user has
                        // successfully authenticated and selected an account to
                        // use.
                        //
                        // When called, you will send the public_token
                        // and the selected account ID, metadata.accounts,
                        // to your backend app server.
                        //
                        var obj = {
                            InstanceId: metadata.institution.institution_id,
                            InstanceName: metadata.institution.name,
                            PublicToken: public_token
                        };

                        $("#txtPublicToken").val(JSON.stringify(obj));
                        $("#frm").submit();
                        switch (metadata.accounts.length) {
                            case 0:
                                // Select Account is disabled: https://dashboard.plaid.com/link/account-select
                                break;
                            case 1:
                                console.log('Customer-selected account ID: ' + metadata.accounts[0].id);
                                break;
                            default:
                                // Multiple Accounts is enabled: https://dashboard.plaid.com/link/account-select
                        }
                    },
                    onExit:  function (err, metadata) {
                        debugger;
                        // The user exited the Link flow.
                        if (err != null) {
                            // The user encountered a Plaid API error
                            // prior to exiting.
                        }
                        // metadata contains information about the institution
                        // that the user selected and the most recent
                        // API request IDs.
                        // Storing this information can be helpful for support.
                    }
            };

            var linkHandler = Plaid.create(configs);

            linkHandler.open();

        }
</script>


@using (Html.BeginForm("Connection", "Holding", FormMethod.Post, new { @id = "frm" }))
{
    @Html.Hidden("ConnectionDtl", string.Empty, new { @id = "txtPublicToken" })
    @Html.Hidden("Action", string.Empty, new { @id = "txtAction" })
}
